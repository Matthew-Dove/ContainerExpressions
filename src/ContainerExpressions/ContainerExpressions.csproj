<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>netstandard2.0</TargetFramework>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|AnyCPU'">
    <DocumentationFile>bin\$(Configuration)\$(TargetFramework)\$(AssemblyName).xml</DocumentationFile>
  </PropertyGroup>

  <PropertyGroup>
    <PackageOutputPath>./nupkg</PackageOutputPath>
    <id>ContainerExpressions</id>
    <Authors>Matthew Dove</Authors>
    <Version>8.0.1</Version>
    <Copyright>Matthew Dove. All rights reserved.</Copyright>
    <PackageLicenseExpression></PackageLicenseExpression>
    <RepositoryUrl>https://github.com/Matthew-Dove/ContainerExpressions</RepositoryUrl>
    <RepositoryType>git</RepositoryType>
    <PackageProjectUrl>https://github.com/Matthew-Dove/ContainerExpressions</PackageProjectUrl>
    <Title>Container Expressions</Title>
    <Description>ContainerExpressions provides generic abstractions to remove boilerplate code needed by all programs.

Containers have some utility that extends the underlying type (any T).
Expressions are designed to work on top of containers, helping in common use cases; or quality of life when connecting code together.

For example the Response container's "utility" is to let the caller know if some T value was generated without error.
The expression Retry will attempt to get the T value after x time delay for n attempts, a good combo for intermittent networking errors.</Description>
    <PackageReleaseNotes>Breaking change: renamed extension method Response.WithValue(Any T) to Response.With(Any T) to follow the conventions of other containers.
New container Alias allows you to give names to types, while retaining the behavior of the underlying type.</PackageReleaseNotes>
    <PackageLicenseFile>LICENSE.txt</PackageLicenseFile>
    <PackageIcon>dove.png</PackageIcon>
    <PackageRequireLicenseAcceptance>false</PackageRequireLicenseAcceptance>
    <PackageReadmeFile>README.md</PackageReadmeFile>
  </PropertyGroup>

  <ItemGroup>
    <Folder Include="Expressions\Core\" />
    <Folder Include="Expressions\Models\" />
  </ItemGroup>

  <ItemGroup>
    <None Include="..\..\images\dove.png">
      <Pack>True</Pack>
      <PackagePath></PackagePath>
    </None>
    <None Include="..\..\LICENSE.txt">
      <Pack>True</Pack>
      <PackagePath></PackagePath>
    </None>
    <None Include="..\..\README.md">
      <Pack>True</Pack>
      <PackagePath>\</PackagePath>
    </None>
  </ItemGroup>

</Project>
